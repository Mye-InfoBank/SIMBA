// default parameters
params {
    publish_dir_mode = "link"
    samplesheet = null
    samplesheet2 = null
    mnn = false
    clustering_resolutions = [0.25, 0.5, 0.75, 1, 1.5, 2]
    celltypist_model = "Cells_Intestinal_Tract.pkl"
    celltypist_majority_voting = true
    organism = "human"
    scib_fast = true
}

profiles {
    standard {
        process.executor = 'local'
        docker.enabled = true
        docker.userEmulation = true
    }
    cluster {
        process.executor = 'slurm'
        process.queue = 'exbio-cpu'
        apptainer.enabled = true
        apptainer.autoMounts = true
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 4
        executor.memory        = 8.GB
    }
}

process {
    // global for all scvi processes in this workflow
    withName: "SCVI.*" {
        container = "bigdatainbiomedicine/sc-python"
        cpus = 4
        memory = {100.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
    }
    withName: SCANVI {
        container = "bigdatainbiomedicine/sc-python"
        // don't run on GPU due to pytorch internal runtime error
        // runs in reasonable time (20min-ish) without a GPU on a
        // full compute node
        cpus = 44
        memory = {100.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
    }

    withName: HARMONY {
        container = "bigdatainbiomedicine/sc-python"
        ext.kernel = "python3"
        cpus = 22
        memory = {100.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
    }

    withName: MNN {
        container = "bigdatainbiomedicine/mnn"
        ext.kernel = "python3"
        cpus = 22
        memory = {200.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
    }

    withName: MERGE_INTEGRATIONS {
        container = "bigdatainbiomedicine/sc-python"
        cpus = 5
        memory = {50.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
    }

    withName: DECONTX {
        container = "bigdatainbiomedicine/sc-r"
        cpus = 4
        memory = {50.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
    }

    /********************************
     * INTEGRATION
     ********************************/

    withName: ".*integrate_datasets:SCQC" {
        container = "bigdatainbiomedicine/sc-python"
        publishDir = [
            path: { "${params.outdir}/integrate_datasets/02_qc_and_filtering/${meta.id}" },
            mode: params.publish_dir_mode
        ]
        memory = {50.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
    }
    withName: ".*integrate_datasets:SCQC_MERGE_STATS" {
        publishDir = [
            path: "${params.outdir}/integrate_datasets/02_qc_and_filtering",
            mode: params.publish_dir_mode
        ]
    }
    withName: MERGE_ALL {
        container = "bigdatainbiomedicine/sc-python"
        ext.kernel = "python3"
        cpus = 22
        memory = {100.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
        publishDir = [
            path: "${params.outdir}/integrate_datasets/21_merge_all",
            mode: params.publish_dir_mode
        ]
    }

    withName: ".*integrate_datasets:SCVI" {
        publishDir = [
            path: "${params.outdir}/integrate_datasets/22_scvi",
            mode: params.publish_dir_mode
        ]
    }
    withName: ".*integrate_datasets:SCANVI" {
         publishDir = [
            path: "${params.outdir}/integrate_datasets/23_scanvi",
            mode: params.publish_dir_mode
        ]
    }
       withName: ".*integrate_datasets:HARMONY" {
         publishDir = [
            path: "${params.outdir}/integrate_datasets/22_harmony",
            mode: params.publish_dir_mode
        ]
    }
           withName: ".*integrate_datasets:MNN" {
         publishDir = [
            path: "${params.outdir}/integrate_datasets/23_mnn",
            mode: params.publish_dir_mode
        ]
    }
    withName: ".*:NEIGHBORS_LEIDEN_UMAP_DOUBLET:MERGE_UMAP_LEIDEN" {
        publishDir = [
            path: "${params.outdir}/integrate_datasets/24_scanvi_umap",
            mode: params.publish_dir_mode
        ]
    }
    withName: SOLO {
        container = "bigdatainbiomedicine/sc-python"
        cpus = 4
        memory = { 100.GB * task.attempt }
        maxRetries = 4
        errorStrategy = 'retry'
        publishDir = [
            path: "${params.outdir}/integrate_datasets/25_solo",
            mode: params.publish_dir_mode
        ]
    }
    withName: MERGE_SOLO {
        container = "bigdatainbiomedicine/sc-python"
        ext.kernel = "python3"
        memory = {100.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
        publishDir = [
            path: "${params.outdir}/integrate_datasets/26_merge_solo",
            mode: params.publish_dir_mode
        ]
    }
    withName: ".*:NEIGHBORS_LEIDEN_UMAP_NODOUBLET:MERGE_UMAP_LEIDEN" {
        publishDir = [
            path: "${params.outdir}/integrate_datasets/27_leiden_umap_nodoublet",
            mode: params.publish_dir_mode
        ]
    }
    withName: SPLIT_BATCHES {
        container = "bigdatainbiomedicine/sc-python"
        ext.kernel = "python3"
        memory = {50.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
    }

    withName: COMBINE_ADATA_METRICS {
        publishDir = [
            path: "${params.outdir}/adata_metrics",
            mode: params.publish_dir_mode
        ]
    }


    /**************************************************
     * ANNOTATION
     **************************************************/
    withName: CELLTYPIST {
        container = "bigdatainbiomedicine/sc-python"
        ext.kernel = "python3"
        memory = {50.GB * task.attempt}
        maxRetries = 15
        errorStrategy = 'retry'
        publishDir = [
            path: "${params.outdir}/annotate_datasets/31_celltypist",
            mode: params.publish_dir_mode
        ]
    }
    withName: ".*annotate_dataset:SPLIT_ANNDATA" {
        container = "bigdatainbiomedicine/sc-python"
        memory = {50.GB * task.attempt}
        maxRetries = 4
        errorStrategy = 'retry'
    }
    withName: ".*:NEIGHBORS_LEIDEN_UMAP_CELL_TYPES:MERGE_UMAP_LEIDEN" {
        publishDir = [
            path: "${params.outdir}/annotate_datasets/31_cell_types_coarse/by_cell_type",
            mode: params.publish_dir_mode
        ]
    }
    withName: ".*annotate_dataset:EXPORT_ATLAS" {
        container = "bigdatainbiomedicine/sc-python"
        ext.kernel = "python3"
        publishDir = [
            path: "${params.outdir}/annotate_datasets/35_final_atlas",
            mode: params.publish_dir_mode
        ]
    }

    withName: ".*annotate_dataset:SCVI" {
        publishDir = [
            path: "${params.outdir}/annotate_datasets/35_final_atlas",
            mode: params.publish_dir_mode
        ]
        ext.args = "--arches_params 1"
    }
    withName: ".*annotate_dataset:SCANVI" {
        publishDir = [
            path: "${params.outdir}/annotate_datasets/35_final_atlas",
            mode: params.publish_dir_mode
        ]
    }

    /***************************************************
     * Add additional datasets
     ***************************************************/

    withName: ".*add_additional_datasets:SCQC" {
        container = "bigdatainbiomedicine/sc-python"
        publishDir = [
            path: { "${params.outdir}/add_additional_datasets/01_qc_and_filtering/${meta.id}" },
            mode: params.publish_dir_mode
        ]
    }
    withName: ".*add_additional_datasets:SCQC_MERGE_STATS" {
        publishDir = [
            path: "${params.outdir}/add_additional_datasets/01_qc_and_filtering",
            mode: params.publish_dir_mode
        ]
    }
    withName: ".*add_additional_datasets:INTEGRATE_INTO_ATLAS" {
        cpus = 2
        container = "bigdatainbiomedicine/sc-python"
        publishDir = [
            path: { "${params.outdir}/add_additional_datasets/02_integrate_into_atlas/${parameters.dataset_id}" },
            mode: params.publish_dir_mode
        ]
        ext.kernel = "python3"
        cache = 'lenient'
    }
    withName: ".*add_additional_datasets:UPDATE_ANNOTATION" {
        cpus = 16
        container = "bigdatainbiomedicine/sc-python"
        publishDir = [
            path: "${params.outdir}/add_additional_datasets/03_update_annotation",
            mode: params.publish_dir_mode
        ]
        ext.kernel = "python3"
        cache = 'lenient'
    }

}

