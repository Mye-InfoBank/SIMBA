/*
 * --------------------------------------------------
 *  Config file for defining DSL2 per module options
 * --------------------------------------------------
 *
 *   Available keys to override module options:
 *       args           = Additional arguments appended to command in module.
 *       args2          = Second set of arguments appended to command in module (multi-tool modules).
 *       publish_dir    = Directory to publish results.
 *       publish_by_id  = Publish results in separate folders by meta.id value.
 *       publish_files  = Groovy map where key = "file_ext" and value = "directory" to publish results for that file extension
 *                        The value of "directory" is appended to the standard "publish_dir" path as defined above.
 *                        If publish_files == null (unspecified)  - All files are published.
 *                        If publish_files == false               - No files are published.
 *       suffix         = File name suffix for output files.
 *
 */


 params {
    modules {
        'SCQC' {
            publish_dir = '02_qc_and_filtering'
            publish_by_id = true
        }
        'SCQC_MERGE_STATS' {
            publish_dir = '02_qc_and_filtering'
        }
        'SCVI_SEED' {
            publish_dir = '10_seed_annotations_scvi'
        }
        'ANNOTATE_SEED' {
            publish_dir = '11_seed_annotations'
        }
        'MERGE_ALL' {
            publish_dir = '21_merge_all'
        }
        'SCVI' {
            publish_dir = '22_scvi'
        }
        'SCANVI' {
            publish_dir = '23_scanvi'
        }
        'SOLO' {
            publish_dir = '25_solo'
        }
        'MERGE_SOLO' {
            publish_dir = '26_merge_solo'
        }
        'ANNOTATE_CELL_TYPES_COARSE' {
            publish_dir = '27_annotate_cell_types_coarse'
        }
        'ANNOTATE_CELL_TYPES_FINE' {
            publish_dir = '29_annotate_cell_types_fine'
        }
        'H5AD_TO_SEURAT' {
            publish_dir = '29_annotate_cell_types_fine_seurat'
        }
        'SPLIT_ANNDATA' {
            publish_dir = '30_split_by_dataset'
        }
        'PREPARE_CELLXGENE' {
            publish_dir = 'zz_prepare_cellxgene'
        }
        'PREPARE_FOR_DE' {
            publish_dir = '31_prepare_for_de'
        }
        'PREPARE_ANNDATA_TUMOR_NORMAL' {
            publish_dir = '31_prepare_for_de/tumor_normal'
        }
        'MAKE_PSEUDOBULK_TUMOR_NORMAL' {
            publish_dir = '31_prepare_for_de/tumor_normal'
        }
        'DE_EDGER_TUMOR_NORMAL' {
            publish_dir = '32_de/tumor_normal'
        }
    }
    subworkflows {
        "NEIGHBORS_LEIDEN_UMAP_SEED" {
            publish_dir = '11_seed_annotations_leiden_umap'
        }
        "NEIGHBORS_LEIDEN_UMAP_DOUBLET" {
            publish_dir = '24_scanvi_umap'
        }
        'NEIGHBORS_LEIDEN_UMAP_CELL_TYPES' {
            publish_dir = '28_annotate_cell_types_coarse_umap'
        }
    }
}

process {
    withName: ANNOTATE_SEED {
        conda = "/home/sturm/.conda/envs/pircher-sc-integrate2"
        container = null
        cpus = 8
    }
    withName: MERGE_ALL {
        conda = "/home/sturm/.conda/envs/pircher-sc-integrate2"
        container = null
        cpus = 22
        memory = 200.GB
    }
    withName: MERGE_SOLO {
        conda = "/home/sturm/.conda/envs/pircher-sc-integrate2"
        container = null
        memory = 200.GB
    }
    withName: ANNOTATE_CELL_TYPES_COARSE {
        conda = "/home/sturm/.conda/envs/pircher-sc-integrate2"
        container = null
        memory = 200.GB
    }
    withName: ANNOTATE_CELL_TYPES_FINE {
        conda = "/home/sturm/.conda/envs/pircher-sc-integrate2"
        container = null
        memory = 200.GB
    }
    withName: PREPARE_CELLXGENE {
        conda = "/home/sturm/.conda/envs/pircher-sc-integrate2"
        container = null
    }
    withName: PREPARE_FOR_DE {
        conda = "/home/sturm/.conda/envs/pircher-sc-integrate2"
        container = null
        memory = 200.GB
    }
}

